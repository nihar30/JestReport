# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CII

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master    

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Versioning
      uses: paulhatch/semantic-version@v4.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/' 
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "."
        # Named version, will be used as suffix for name version tag
        namespace: ''
        # Indicate whether short tags like 'v1' should be supported. If false only full
        # tags like 'v1.0.0' will be recognized.
        short_tags: true
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true

           
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm i express
    #- run: npm i mocha supertest --save-dev
    - run: npm install --save-dev jest
    #- run: npm run test:coverage
    - run: npm run test
    - run: ls -R
    
      
    - run: npm run coverage
    - run: npm install sonarqube-scanner --save-dev
#     - run: npm run sonar
    - run: ls -R
    
    - name: Push to Coveralls
      uses: coverallsapp/github-action@master
      with:
         github-token: ${{ secrets.GITHUB_TOKEN }}
    

